// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package order

import (
	"context"

	"github.com/uyuyuuy/go-zero-shop-rpc/app/order/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateOrderReq  = pb.CreateOrderReq
	CreateOrderResp = pb.CreateOrderResp
	Order           = pb.Order

	OrderZrpcClient interface {
		CreateOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error)
		CreateOrderRollback(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error)
	}

	defaultOrderZrpcClient struct {
		cli zrpc.Client
	}
)

func NewOrderZrpcClient(cli zrpc.Client) OrderZrpcClient {
	return &defaultOrderZrpcClient{
		cli: cli,
	}
}

func (m *defaultOrderZrpcClient) CreateOrder(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}

func (m *defaultOrderZrpcClient) CreateOrderRollback(ctx context.Context, in *CreateOrderReq, opts ...grpc.CallOption) (*CreateOrderResp, error) {
	client := pb.NewOrderClient(m.cli.Conn())
	return client.CreateOrderRollback(ctx, in, opts...)
}
