// Code generated by goctl. DO NOT EDIT.
// Source: product.proto

package product

import (
	"context"

	"github.com/uyuyuuy/go-zero-shop-rpc/app/product/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Product          = pb.Product
	UpdateProductReq = pb.UpdateProductReq
	UpdateResp       = pb.UpdateResp

	ProductZrpcClient interface {
		UpdateProduct(ctx context.Context, in *UpdateProductReq, opts ...grpc.CallOption) (*UpdateResp, error)
		UpdateProductRollback(ctx context.Context, in *UpdateProductReq, opts ...grpc.CallOption) (*UpdateResp, error)
	}

	defaultProductZrpcClient struct {
		cli zrpc.Client
	}
)

func NewProductZrpcClient(cli zrpc.Client) ProductZrpcClient {
	return &defaultProductZrpcClient{
		cli: cli,
	}
}

func (m *defaultProductZrpcClient) UpdateProduct(ctx context.Context, in *UpdateProductReq, opts ...grpc.CallOption) (*UpdateResp, error) {
	client := pb.NewProductClient(m.cli.Conn())
	return client.UpdateProduct(ctx, in, opts...)
}

func (m *defaultProductZrpcClient) UpdateProductRollback(ctx context.Context, in *UpdateProductReq, opts ...grpc.CallOption) (*UpdateResp, error) {
	client := pb.NewProductClient(m.cli.Conn())
	return client.UpdateProductRollback(ctx, in, opts...)
}
